MY_GCD:
  PUSH(FP);
  MOV(FP, SP);
  PUSH(R1);
  PUSH(R2);
  PUSH(R3);
  MOV(R1, 0);
  MOV(R2, 0);
  MOV(R2, FPARG(0));
  MOV(R1, FPARG(1));
MY_GCD_LOOP:
  MOV(R3, R1);
  REM(R3, R2);
  CMP(R3, IMM(0));
  JUMP_EQ(MY_GCD_EXIT);
  MOV(R1, R2);
  MOV(R2, R3);
  JUMP(MY_GCD_LOOP);
MY_GCD_EXIT:
  MOV(R0, R2);
  POP(R3);
  POP(R2);
  POP(R1);
  POP(FP);
  RETURN;
//
MAKE_SOB_FRACTION:
  PUSH(FP);
  MOV(FP, SP);
  PUSH(R1);
  PUSH(R2);
  PUSH(R3);
  PUSH(R4);
  PUSH(IMM(3));
  CALL(MALLOC);
  DROP(1);
  MOV(R4, 0);
  MOV(R4, R0);
  MOV(R3, FPARG(0));
  MOV(R2, FPARG(1));
  PUSH(R2);
  PUSH(R3);
  CALL(MY_GCD);
  DROP(2);
  CMP(R0, IMM(0));
  JUMP_GE(CASE_NOT_MINUS);
  MOV(R1, R0);
  MOV(R0, IMM(0));
  SUB(R0, R1);
CASE_NOT_MINUS:
  DIV(R2, R0);
  DIV(R3, R0);
  CMP(R3, IMM(0));
  JUMP_GE(CASE_DENOMINATOR_NOT_MINUS);
  CMP(R2, IMM(0));
  JUMP_GE(CASE_NUMERATOR_NOT_MINUS);
  MOV(R0, IMM(0));
  SUB(R0, R2);
  MOV(R2, R0);
  MOV(R0, IMM(0));
  SUB(R0, R3);
  MOV(R3, R0);
  JUMP(CASE_DENOMINATOR_NOT_MINUS);
CASE_NUMERATOR_NOT_MINUS:
  MOV(R0, R2);
  ADD(R2, R2);
  SUB(R0, R2);
  MOV(R2, R0);
  MOV(R0, IMM(0));
  SUB(R0, R3);
  MOV(R3, R0);
CASE_DENOMINATOR_NOT_MINUS:
  MOV(INDD(R4, 0), T_FRACTION);
  MOV(INDD(R4, 1), R2); // 1
  MOV(INDD(R4, 2), R3); // 2
  MOV(R0, R4);
  POP(R4);
  POP(R3);
  POP(R2);
  POP(R1);
  POP(FP);
  RETURN;