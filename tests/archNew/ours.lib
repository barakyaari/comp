PRINT_R0:
	PUSH(FP);
	MOV(FP, SP);
	CMP(R0, IMM(T_VOID));
	JUMP_EQ(PRINT_R0_END);
	PUSH(R0);
	CALL(WRITE_SOB_HELPER);
	DROP(IMM(1));
	/*PUSH('\n');
	CALL(PUTCHAR);
	DROP(IMM(1)); */
PRINT_R0_END:
	JUMP(END);
END:
	POP(FP);
	RETURN;


 WRITE_SOB_HELPER:
  MOV(R0, STARG(0));
  MOV(R0, IND(R0));
  CMP(R0, IMM(T_VOID));
  JUMP_EQ(WRITE_SOB_VOID);
  CMP(R0, IMM(T_NIL));
  JUMP_EQ(WRITE_SOB_NIL); 
  CMP(R0, IMM(T_BOOL));
  JUMP_EQ(WRITE_SOB_BOOL); 
  CMP(R0, IMM(T_CHAR));
  JUMP_EQ(WRITE_SOB_CHAR); 
  CMP(R0, IMM(T_INTEGER));
  JUMP_EQ(WRITE_SOB_INTEGER);
  CMP(R0, IMM(T_STRING));
  JUMP_EQ(WRITE_SOB_STRING);
  CMP(R0, IMM(T_SYMBOL));
  JUMP_EQ(WRITE_SOB_SYMBOL_HELPER);
  CMP(R0, IMM(T_PAIR));
  JUMP_EQ(WRITE_SOB_PAIR);
  CMP(R0, IMM(T_VECTOR));
  JUMP_EQ(WRITE_SOB_VECTOR);
  CMP(R0, IMM(T_CLOSURE));
  JUMP_EQ(WRITE_SOB_CLOSURE);
  PUSH(R0);
  PUSH(IMM('\n'));
  CALL(PUTCHAR);
  PUSH(IMM('F'));
  CALL(PUTCHAR);
  PUSH(IMM('a'));
  CALL(PUTCHAR);
  PUSH(IMM('t'));
  CALL(PUTCHAR);
  PUSH(IMM('a'));
  CALL(PUTCHAR);
  PUSH(IMM('l'));
  CALL(PUTCHAR);
  PUSH(IMM(' '));
  CALL(PUTCHAR);
  PUSH(IMM('e'));
  CALL(PUTCHAR);
  PUSH(IMM('r'));
  CALL(PUTCHAR);
  PUSH(IMM('r'));
  CALL(PUTCHAR);
  PUSH(IMM('o'));
  CALL(PUTCHAR);
  PUSH(IMM('r'));
  CALL(PUTCHAR);
  PUSH(IMM(':'));
  CALL(PUTCHAR);
  PUSH(IMM(' '));
  CALL(PUTCHAR);
  PUSH(IMM('C'));
  CALL(PUTCHAR);
  PUSH(IMM('o'));
  CALL(PUTCHAR);
  PUSH(IMM('r'));
  CALL(PUTCHAR);
  PUSH(IMM('r'));
  CALL(PUTCHAR);
  PUSH(IMM('u'));
  CALL(PUTCHAR);
  PUSH(IMM('p'));
  CALL(PUTCHAR);
  PUSH(IMM('t'));
  CALL(PUTCHAR);
  PUSH(IMM(' '));
  CALL(PUTCHAR);
  PUSH(IMM('s'));
  CALL(PUTCHAR);
  PUSH(IMM('e'));
  CALL(PUTCHAR);
  PUSH(IMM('x'));
  CALL(PUTCHAR);
  PUSH(IMM('p'));
  CALL(PUTCHAR);
  PUSH(IMM('r'));
  CALL(PUTCHAR);
  PUSH(IMM(' '));
  CALL(PUTCHAR);
  PUSH(IMM('t'));
  CALL(PUTCHAR);
  PUSH(IMM('y'));
  CALL(PUTCHAR);
  PUSH(IMM('p'));
  CALL(PUTCHAR);
  PUSH(IMM('e'));
  CALL(PUTCHAR);
  PUSH(IMM(':'));
  CALL(PUTCHAR);
  PUSH(IMM(' '));
  CALL(PUTCHAR);
  DROP(34);
  CALL(WRITE_INTEGER);
  DROP(1);
  CALL(NEWLINE);
  HALT;

 WRITE_SOB_SYMBOL_HELPER:
  PUSH(FP);
  MOV(FP, SP);
  PUSH(R1);
  PUSH(R2);
  PUSH(R3);
  MOV(R0, FPARG(0));
  MOV(R1, INDD(R0, 1));
  MOV(R2, R0);
  ADD(R2, IMM(2));
 L_SYMB_LOOP:
  CMP(R1, IMM(0));
  JUMP_EQ(L_SYMB_EXIT);
  CMP(IND(R2), '\n');
  JUMP_EQ(L_SYMB_NEWLINE);
  CMP(IND(R2), '\t');
  JUMP_EQ(L_SYMB_TAB);
  CMP(IND(R2), '\f');
  JUMP_EQ(L_SYMB_PAGE);
  CMP(IND(R2), '\r');
  JUMP_EQ(L_SYMB_RETURN);
  CMP(IND(R2), '\\');
  JUMP_EQ(L_SYMB_BACKSLASH);
  CMP(IND(R2), '\"');
  JUMP_EQ(L_SYMB_DQUOTE);
  CMP(IND(R2), ' ');
  JUMP_LT(L_SYMB_OCT_CHAR);
  PUSH(IND(R2));
  CALL(PUTCHAR);
  DROP(1);
  JUMP(L_SYMB_LOOP_CONT);
 L_SYMB_DQUOTE:
  PUSH(IMM('\\'));
  CALL(PUTCHAR);
  PUSH(IMM('\"'));
  CALL(PUTCHAR);
  DROP(2);
  JUMP(L_SYMB_LOOP_CONT);
 L_SYMB_BACKSLASH:
  PUSH(IMM('\\'));
  CALL(PUTCHAR);
  PUSH(IMM('\\'));
  CALL(PUTCHAR);
  DROP(2);
  JUMP(L_SYMB_LOOP_CONT);
 L_SYMB_RETURN:
  PUSH(IMM('\\'));
  CALL(PUTCHAR);
  PUSH(IMM('r'));
  CALL(PUTCHAR);
  DROP(2);
  JUMP(L_SYMB_LOOP_CONT);
 L_SYMB_PAGE:
  PUSH(IMM('\\'));
  CALL(PUTCHAR);
  PUSH(IMM('f'));
  CALL(PUTCHAR);
  DROP(2);
  JUMP(L_SYMB_LOOP_CONT);
 L_SYMB_TAB:
  PUSH(IMM('\\'));
  CALL(PUTCHAR);
  PUSH(IMM('t'));
  CALL(PUTCHAR);
  DROP(2);
  JUMP(L_SYMB_LOOP_CONT);  
 L_SYMB_NEWLINE:
  PUSH(IMM('\\'));
  CALL(PUTCHAR);
  PUSH(IMM('n'));
  CALL(PUTCHAR);
  DROP(2);
  JUMP(L_SYMB_LOOP_CONT);
 L_SYMB_OCT_CHAR:
  MOV(R0, IND(R2));
  MOV(R3, R0);
  REM(R3, IMM(8));
  PUSH(R3);
  DIV(R0, IMM(8));
  MOV(R3, R0);
  REM(R3, IMM(8));
  PUSH(R3);
  DIV(R0, IMM(8));
  REM(R0, IMM(8));
  PUSH(R0);
  PUSH(IMM('\\'));
  CALL(PUTCHAR);
  DROP(1);
  CALL(WRITE_INTEGER);
  DROP(1);
  CALL(WRITE_INTEGER);
  DROP(1);
  CALL(WRITE_INTEGER);
  DROP(1);
 L_SYMB_LOOP_CONT:
  INCR(R2);
  DECR(R1);
  JUMP(L_SYMB_LOOP);
 L_SYMB_EXIT:
  POP(R3);
  POP(R2);
  POP(R1);
  POP(FP);
  RETURN;



PLUS:
  PUSH(FP);
  MOV(FP, SP);
  PUSH(R1);
  PUSH(R2);
  PUSH(R3);
  PUSH(R4);
  MOV(R1, 0);
  MOV(R2, FPARG(LOCAL_NUM_ARGS)); /*iterate from 2 to 2+ number of args */
  ADD(R2, 2);
  MOV(R3, 2);   
PLUS_LOOP:
  CMP(R2, R3);
  JUMP_EQ(PLUS_END);
  MOV(R4, FPARG(R3)); /* SCHEME INTEGER */
  ADD(R1, INDD(R4, 1)); /* SCHEME INTEGER NUMBER */ 
  ADD(R3, 1);
  JUMP(PLUS_LOOP);
PLUS_END:
  PUSH(R1);
  CALL(MAKE_SOB_INTEGER);
  DROP(1); 
  POP(R4);
  POP(R3);
  POP(R2);
  POP(R1);
  JUMP(END);
